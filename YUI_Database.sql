CREATE TABLE "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email" varchar UNIQUE,
  "display_name" varchar,
  "password" varchar,
  "wallet_address" varchar,
  "is_admin" bit,
  "created_at" timestamp
);

CREATE TABLE "follows" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer,
  "following_user_id" integer,
  "created_at" timestamp
);

CREATE TABLE "artworks" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" varchar,
  "description" varchar,
  "url" varchar,
  "crypto_price" float,
  "converted_price" float,
  "currency" varchar,
  "user_id" integer,
  "category_id" integer,
  "published" bit,
  "created_at" timestamp
);

CREATE TABLE "nfts" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "token" varchar,
  "artwork_id" integer,
  "created_at" timestamp
);

CREATE TABLE "categories" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "display" varchar,
  "created_at" timestamp
);

CREATE TABLE "comments" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "comment" varchar,
  "user_id" integer,
  "comment_parent_id" integer,
  "created_at" timestamp
);

CREATE TABLE "carts" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "artwork_id" integer,
  "user_id" integer,
  "created_at" timestamp
);

CREATE TABLE "feedbacks" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email" varchar,
  "content" varchar
);

ALTER TABLE "follows" ADD FOREIGN KEY ("following_user_id") REFERENCES "users" ("id");

ALTER TABLE "follows" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "artworks" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "comments" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "carts" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "carts" ADD FOREIGN KEY ("artwork_id") REFERENCES "artworks" ("id");

ALTER TABLE "nfts" ADD FOREIGN KEY ("artwork_id") REFERENCES "artworks" ("id");

ALTER TABLE "feedbacks" ADD FOREIGN KEY ("email") REFERENCES "users" ("email");

CREATE TABLE "artworks_categories" (
  "artworks_category_id" integer,
  "categories_id" integer,
  PRIMARY KEY ("artworks_category_id", "categories_id")
);

ALTER TABLE artworks_categories
ADD CONSTRAINT fk_artworks_categories_artworks
FOREIGN KEY (artworks_category_id)
REFERENCES artworks(id);

ALTER TABLE "artworks_categories" ADD FOREIGN KEY ("categories_id") REFERENCES "categories" ("id");


-- Chèn dữ liệu mẫu cho bảng categories
INSERT INTO categories (display, created_at) VALUES
('Abstract', CURRENT_TIMESTAMP),
('Portrait', CURRENT_TIMESTAMP),
('Landscape', CURRENT_TIMESTAMP);

-- Chèn dữ liệu mẫu cho bảng users
INSERT INTO users (email, display_name, password, wallet_address, is_admin, created_at) VALUES
('user3@example.com', 'User3', 'password789', 'wallet789', B'0', CURRENT_TIMESTAMP),
('user4@example.com', 'User4', 'password101', 'wallet101', B'1', CURRENT_TIMESTAMP);

-- Chèn dữ liệu mẫu cho bảng follows
INSERT INTO follows (user_id, following_user_id, created_at) VALUES
(1, 2, CURRENT_TIMESTAMP),
(2, 1, CURRENT_TIMESTAMP);

-- Chèn dữ liệu mẫu cho bảng artworks
INSERT INTO artworks (title, description, url, crypto_price, converted_price, currency, user_id, category_id, published, created_at) VALUES
('Artwork1', 'Description1', 'url1', 1.0, 100.0, 'USD', 1, 1,  B'0', CURRENT_TIMESTAMP),
('Artwork2', 'Description2', 'url2', 2.0, 200.0, 'USD', 2, 2,  B'0', CURRENT_TIMESTAMP);

-- Chèn dữ liệu mẫu cho bảng nfts
INSERT INTO nfts (token, artwork_id, created_at) VALUES
('Token1', 1, CURRENT_TIMESTAMP),
('Token2', 2, CURRENT_TIMESTAMP);

-- Chèn dữ liệu mẫu cho bảng comments
INSERT INTO comments (comment, user_id, comment_parent_id, created_at) VALUES
('Comment1', 1, NULL, CURRENT_TIMESTAMP),
('Comment2', 2, NULL, CURRENT_TIMESTAMP);

-- Chèn dữ liệu mẫu cho bảng carts
INSERT INTO carts (artwork_id, user_id, created_at) VALUES
(1, 1, CURRENT_TIMESTAMP),
(2, 2, CURRENT_TIMESTAMP);

-- Chèn dữ liệu mẫu cho bảng feedbacks
INSERT INTO feedbacks (email, content) VALUES
('user3@example.com', 'Feedback content 1'),
('user4@example.com', 'Feedback content 2');

